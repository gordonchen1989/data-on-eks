version: 0.2

#env:
#  variables:
#    key: "value"
#    key: "value"

phases:
  install:
    commands:
      - wget https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
      - unzip terraform_1.5.7_linux_amd64.zip
      - sudo mv terraform /bin
      - rm terraform_1.5.7_linux_amd64.zip
      - echo "Prepare terraform file"
      - cd infra/terraform/
      - echo "terraform { " >> backend.tf
      - echo "   backend \"s3\" { " >> backend.tf
      - echo "   bucket = \"$s3statebucket\"" >> backend.tf
      - echo "   key    = \"$stackname/terraform.tfstate\"" >> backend.tf
      - echo "   region = \"$region\"" >> backend.tf
      - echo "  }" >> backend.tf
      - echo "}" >> backend.tf
      - cat backend.tf
      - terraform init
  build:
    commands:
      - terraform plan -var-file=terraform.tfvars
      - echo "Apply terraform build"
      - |
        max_retry=3
        counter=1
        until terraform apply  -var-file=terraform.tfvars -auto-approve
        do
           [[ counter -eq $max_retry ]] && exit 1
           echo "FAILED: Terraform apply failed, will wait 120 seconds and retry. Try #$counter"
           sleep 120
           ((counter++))
        done
      - region=$(terraform output -raw region)
      - s3_bucket_id_spark=$(terraform output -raw s3_bucket_id_spark)
      - echo "#######Setup Environment Variables######" >> env.sh
      - echo "echo 'region=${region}' >> ~/.bashrc" >> env.sh
      - echo "echo 's3_bucket_id_spark=${s3_bucket_id_spark}' >> ~/.bashrc" >> env.sh
      - echo ". ~/.bashrc" >> env.sh
      - cat env.sh
  post_build:
    commands:
      # CODEBUILD_BUILD_SUCCEEDING = 1 Set to 0 if the build is failing, or 1 if the build is succeeding.
      - echo ">>> build status $CODEBUILD_BUILD_SUCCEEDING "
      - |
        if [ ! -z "$CFN_RESPONSE_URL" ]; then
          if [ "$CODEBUILD_BUILD_SUCCEEDING" -eq "1" ]
          then
            curl -X PUT -H 'Content-Type:' --data-binary '{"Status" : "SUCCESS","Reason" : "Creation Complete", "UniqueId" : "$CODEBUILD_BUILD_ID","Data" : "Creation complete"}' $CFN_RESPONSE_URL
          else
            curl -X PUT -H 'Content-Type:' --data-binary '{"Status" : "FAILURE","Reason" : "Creation Failed", "UniqueId" : "$CODEBUILD_BUILD_ID","Data" : "See Codebuild logs for details. $CODEBUILD_LOG_PATH"}' $CFN_RESPONSE_URL
          fi
        fi
